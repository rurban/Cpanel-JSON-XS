{"version":1,"ops":[{"type":1,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1588542261,"metadata":{"github-id":"MDU6SXNzdWU2MTE1MTQ4NDY=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/163","origin":"github"},"title":"documentation for unblessed_bool is incorrect/outdated","message":"The documentation says:\n\n```\n       $json = $json-\u003eunblessed_bool ([$enable])\n       $enabled = $json-\u003eget_unblessed_bool\n               $json = $json-\u003eunblessed_bool([$enable])\n\n           If $enable is true (or missing), then \"decode\" will return Perl non-object boolean variables (1 and 0) for JSON booleans (\"true\" and \"false\"). If $enable is false, then \"decode\" will return \"Cpanel::JSON::XS::Boolean\"\n           objects for JSON booleans.\n```\n\nThis is not correct:\n\n1. blessed booleans are JSON::PP::Boolean objects now, not Cpanel::JSON::XS::Boolean\n2. unblessed_bool defaults to false.\n\n```\n: $; perl -MData::Dumper -MCpanel::JSON::XS -wle'print Dumper(Cpanel::JSON::XS-\u003enew-\u003eunblessed_bool-\u003edecode(\"[true]\"))'\n$VAR1 = [\n          1\n        ];\n\n: $; perl -MData::Dumper -MCpanel::JSON::XS -wle'print Dumper(Cpanel::JSON::XS-\u003enew-\u003eunblessed_bool(0)-\u003edecode(\"[true]\"))'\n$VAR1 = [\n          bless( do{\\(my $o = 1)}, 'JSON::PP::Boolean' )\n        ];\n\n: $; perl -MData::Dumper -MCpanel::JSON::XS -wle'print Dumper(Cpanel::JSON::XS-\u003enew-\u003edecode(\"[true]\"))'\n$VAR1 = [\n          bless( do{\\(my $o = 1)}, 'JSON::PP::Boolean' )\n        ];\n\n```","files":null}]}