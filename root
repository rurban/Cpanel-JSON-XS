{"version":1,"ops":[{"type":1,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1626378020,"metadata":{"github-id":"MDU6SXNzdWU5NDU2OTU5NTk=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/180","origin":"github"},"title":"inconsistent docs: handling of encoding `!0` and `!1`","message":"The documentation says:\n\n```\n       Cpanel::JSON::XS::true, Cpanel::JSON::XS::false\n           These special values become JSON true and JSON false values, respectively. You can also use \"\\1\" and \"\\0\" or \"!0\" and \"!1\" directly if you want.\n```\n\n..but `!0` and `!1` are not treated as booleans:\n\n```\n$; perl -MCpanel::JSON::XS -wle'print encode_json({ foo =\u003e !0 })'\n{\"foo\":1}\n\n$; perl -MCpanel::JSON::XS -wle'print encode_json({ foo =\u003e !1 })'\n{\"foo\":\"\"}\n```\n\nI'm not sure if it would be better to fix/add this behaviour, or simply not document any special treatment of `!0` and `!1`. There is a `SvTRUE` macro in XS, but no `SvFALSE`. There is also PL_sv_yes and PL_sv_no.","files":null}]}