{"version":1,"ops":[{"type":1,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1448772872,"metadata":{"github-id":"MDU6SXNzdWUxMTkzMzY4NzA=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/46","origin":"github"},"title":"Regression with allow_unknown, invalid JSON","message":"This case should produce [\"foo\"], and it does for normal stringify overloads but not this one (from Mojo::Bytestream).\n\n```\n$ perl -MCpanel::JSON::XS -E'package Foo { \n  use overload q{\"\"} =\u003e sub { ${$_[0]} }, fallback =\u003e 1; \n  sub new { bless \\(my $dummy = \"foo\"), shift } } \n  say Cpanel::JSON::XS-\u003enew-\u003econvert_blessed-\u003eencode([Foo-\u003enew])'\n[foo]\n```\n\nThese cases should encode the scalar ref to null with **allow_unknown** enabled, or throw an exception otherwise.\n\n```\n$ perl -MCpanel::JSON::XS -E'say Cpanel::JSON::XS-\u003enew\n  -\u003eallow_unknown-\u003eallow_blessed-\u003econvert_blessed-\u003eencode({true =\u003e \\\"some true value\"})'\n{\"true\":some true value}\n$ perl -MCpanel::JSON::XS -E'say Cpanel::JSON::XS-\u003enew\n  -\u003eallow_unknown-\u003eallow_blessed-\u003econvert_blessed-\u003eencode({false =\u003e \\\"\"})'\n{\"false\":}\n$ perl -MCpanel::JSON::XS -E'say Cpanel::JSON::XS-\u003enew-\u003e\n  allow_unknown-\u003eallow_blessed-\u003econvert_blessed-\u003eencode({false =\u003e \\!!\"\"})'\n{\"false\":}\n```","files":null}]}