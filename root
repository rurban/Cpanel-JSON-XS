{"version":1,"ops":[{"type":1,"author":{"id":"2c53ef1bc47de482c637c8964bf96dc2511b9a4d"},"timestamp":1448734736,"metadata":{"github-id":"MDU6SXNzdWUxMTkzMTEwMTg=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/45","origin":"github"},"title":"Modification of non-creatable hash value attempted","message":"Cpanel::JSON::XS has started failing this simple test case:\n\n``` perl\nuse strict;\nuse warnings;\nuse Test::More;\nuse Cpanel::JSON::XS;\n\nmy $json = '{\"foo\":null}';\nmy $data = Cpanel::JSON::XS-\u003enew-\u003edecode($json);\n\nok exists $data-\u003e{foo}, \"foo exists\";\nis $data-\u003e{foo}, undef, \"foo is undef\";\nok $data-\u003e{foo} = \"bar\", \"foo can be set to 'bar'\";\n\ndone_testing;\n```\n\nduring the third `ok` with the Perl error `Modification of non-creatable hash value attempted`.\n\n3.0104 didn't exhibit this error, so I bisected the failure to 752377a (\"bool: return the same true and false objects\"):\n\n```\n$ git bisect start master 3.0104\n…\n$ git bisect run bash -c 'perl Makefile.PL \u0026\u0026 make \u0026\u0026 prove --blib -v json-null.t'\n…\njson-null.t .. \nok 1 - foo exists\nok 2 - foo is undef\nModification of non-creatable hash value attempted, subscript \"foo\" at json-null.t line 11.\n# Tests were run but no plan was declared and done_testing() was not seen.\n# Looks like your test exited with 255 just after 2.\nDubious, test returned 255 (wstat 65280, 0xff00)\nAll 2 subtests passed \n\nTest Summary Report\n-------------------\njson-null.t (Wstat: 65280 Tests: 2 Failed: 0)\n  Non-zero exit status: 255\n  Parse errors: No plan found in TAP output\nFiles=1, Tests=2,  0 wallclock secs ( 0.02 usr  0.02 sys +  0.02 cusr  0.00 csys =  0.06 CPU)\nResult: FAIL\n752377a893e0b80566a752826719e4025972ebae is the first bad commit\ncommit 752377a893e0b80566a752826719e4025972ebae\nAuthor: Reini Urban \u003crurban@cpanel.net\u003e\nDate:   Wed Nov 25 12:39:50 2015 +0100\n\n    bool: return the same true and false objects\n\n    not a fresh sv was was previosulty a ref to true/false\n\n:100644 100644 1ed68413802ec75f791558c1a518b9b56bee99b3 7e2a061ab9f887d2fcb468461e57616365ae77f9 M  XS.xs\nbisect run success\n```\n\nThe changes in the commit make it clear that `true` and `false` values exhibit the same issue as `null`, which you can modify the test file above to see.","files":null}]}