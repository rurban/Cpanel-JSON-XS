{"version":1,"ops":[{"type":1,"author":{"id":"e7a72b8b31a62f92d56e1651395212b0db675310"},"timestamp":1475838161,"metadata":{"github-id":"MDU6SXNzdWUxODE2NDExOTE=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/70","origin":"github"},"title":"Heap overflow from new strEQc macro","message":"The `strEQc` macro will read past the end of `*s` if it's shorter than `sizeof(c)`. \n\n```\n$ perl -Mblib -e 'package J { use base \"Cpanel::JSON::XS\"; }; J-\u003enew'\n=================================================================\n==18628==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000278f3 at pc 0x7fe09b80e5ff bp 0x7ffd17049250 sp 0x7ffd17048a00\nREAD of size 17 at 0x6040000278f3 thread T0\n    #0 0x7fe09b80e5fe  (/lib/x86_64-linux-gnu/libasan.so.3+0x8a5fe)\n    #1 0x7fe0973c2229 in XS_Cpanel__JSON__XS_new /home/ilmari/src/Cpanel-JSON-XS/XS.xs:3181\n    #2 0x682b4f in Perl_pp_entersub /home/ilmari/src/perl/pp_hot.c:3983\n    #3 0x5fc7d6 in Perl_runops_debug /home/ilmari/src/perl/dump.c:2246\n    #4 0x4a01db in S_run_body /home/ilmari/src/perl/perl.c:2521\n    #5 0x4a01db in perl_run /home/ilmari/src/perl/perl.c:2449\n    #6 0x423f94 in main /home/ilmari/src/perl/perlmain.c:123\n    #7 0x7fe09a68e2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)\n    #8 0x424789 in _start (/usr/home/ilmari/perl/blead-asan/bin/perl+0x424789)\n\n0x6040000278f3 is located 0 bytes to the right of 35-byte region [0x6040000278d0,0x6040000278f3)\nallocated by thread T0 here:\n    #0 0x7fe09b845d28 in malloc (/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)\n    #1 0x601416 in Perl_safesysmalloc /home/ilmari/src/perl/util.c:153\n    #2 0x974f9f  (/usr/home/ilmari/perl/blead-asan/bin/perl+0x974f9f)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (/lib/x86_64-linux-gnu/libasan.so.3+0x8a5fe) \nShadow bytes around the buggy address:\n  0x0c087fffcec0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x0c087fffced0: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 fa\n  0x0c087fffcee0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x0c087fffcef0: fa fa fd fd fd fd fd fa fa fa 00 00 00 00 00 00\n  0x0c087fffcf00: fa fa 00 00 00 00 00 03 fa fa 00 00 00 00 00 fa\n=\u003e0x0c087fffcf10: fa fa fd fd fd fd fd fa fa fa 00 00 00 00[03]fa\n  0x0c087fffcf20: fa fa 00 00 00 00 05 fa fa fa fd fd fd fd fd fd\n  0x0c087fffcf30: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x0c087fffcf40: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x0c087fffcf50: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x0c087fffcf60: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==18628==ABORTING\n```","files":null}]}