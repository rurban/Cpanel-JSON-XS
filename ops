{"version":1,"ops":[{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1417371103,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0OTkzODE2","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-64993816"},"message":"I'm not sure if we should stringify it. It's is left out on purpose: https://stackoverflow.com/questions/1423081/json-left-out-infinity-and-nan-json-status-in-ecmascript\n\nOther libs convert it to null instead. See e.g. https://code.google.com/p/go/issues/detail?id=3480","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1417374647,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0OTk1OTMz","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-64995933"},"message":"There is no way to make roundtrips with inf or nan work, so as long as it produces valid JSON it is acceptable. I mention Mojo::JSON's behavior as a point of reference, converting to null like with blessed references is another option.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1417379951,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0OTk5Mjkw","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-64999290"},"message":"I'm waiting how upstream JSON decides.","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1417449715,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY1MDg2MDY3","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-65086067"},"message":"FYI, I have let Marc know about this issue and his response was essentially \"it's a bug in your code to produce invalid JSON.\" So JSON::XS won't be fixing it.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1417471918,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY1MTQ0MjY4","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-65144268"},"message":"Yes, that's the easiest and probable best way to handle it. Let the user check all illegal values, similar to perl, where the user has to check for all potential security problems with no strict 'refs' by himself. javascript shouldn't see inf nor nan.\nOn the other hand null is the value most others used.\nAnd stringification to \"nan\", \"inf\" as in Mojo::JSON, parrot and perl6 keeps the most information.\n\nLet's see what makamaka thinks of it. I have no special opinion.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418299627,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2NjEwMTA5","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66610109"},"message":"Added now the testcase from https://github.com/makamaka/JSON-PP/pull/10","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418310902,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2NjMyODU3","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66632857"},"message":"No response. \nI'll do it like this: \n- new default: null as in most other JSON libs,\n- or optionally via -DSTRINGIFY_INFNAN \"inf\" and \"nan\"","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418315106,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2NjQ0NjE5","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66644619"},"message":"Now implemented with cb9007d7f856ab2369ceced2d0e4058e2a5a0870 and fc48ace67d03e1f7e373373ed801f1c1e4065bb8 for 3.0108","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418317384,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjA2Mjg0NzQw"},"status":2},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1418424662,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2ODQ3Nzkz","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66847793"},"message":"Win32 test reports from CPAN testers are getting odd results from inf/nan encoding: http://www.cpantesters.org/cpan/report/ebf54671-6c00-1014-9247-51fd2a825c07\n\n```\n#   Failed test at t/117_numbers.t line 6.\n#          got: '[1.#INF]'\n#     expected: '[null]'\n\n#   Failed test at t/117_numbers.t line 7.\n#          got: '[-1.#IND]'\n#     expected: '[null]'\n```\n\nAnd this one report ended up with [-nan] somehow...\nhttp://www.cpantesters.org/cpan/report/470cdb04-820f-11e4-8cdc-aa95bf9d5952\n\nI think we need two more test cases for -inf and -nan, I just tested these and they are also outputting barewords:\n\n```\nis encode_json([-9**9**9]), '[null]'; # [-inf]\nis encode_json([sin(9**9**9)]), '[null]'; # [-nan]\nis encode_json([9**9**9/9**9**9]), '[null]'; # also [-nan]\n```","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418467880,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2ODcyNTY2","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66872566"},"message":"yeah. I haven't checked windows and the minus. Ok, I'll add these also.","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418467880,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQyMDcxNTQ4MjM="},"status":1},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418507865,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2ODkzMTcy","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/28#issuecomment-66893172"},"message":"Fixed with 3.0111","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1418507865,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjA3MjE5ODY4"},"status":2}]}