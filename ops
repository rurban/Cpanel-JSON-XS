{"version":1,"ops":[{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1463123075,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxODk2NzE4NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-218967185"},"message":"Yes, I fixed that in my own variant of JSON::PP already. It's a JSON::PP\nproblem, I cannot solve. I need to use this namespace for compat.\n\nSee\nhttps://github.com/perl11/cperl/commit/baede45414225ca47c0d23d3d515ba153b699c15\n\nand\nhttps://github.com/perl11/cperl/commit/8fdddef0828b6b6118b2b9a61d5ad2d781c3df54\n\nhow to avoid the redefine warning.\n\n2016-05-12 14:38 GMT+02:00 Kenichi Ishigaki notifications@github.com:\n\n\u003e re: #60 https://github.com/rurban/Cpanel-JSON-XS/issues/60\n\u003e \n\u003e $ perl -we 'use Cpanel::JSON::XS (); use JSON::PP ()'\n\u003e Subroutine JSON::PP::Boolean::(0+ redefined at\n\u003e /home/ishigaki/.plenv/versions/5.20.0/lib/perl5/5.20.0/overload.pm line\n\u003e 50.\n\u003e Subroutine JSON::PP::Boolean::(-- redefined at\n\u003e /home/ishigaki/.plenv/versions/5.20.0/lib/perl5/5.20.0/overload.pm line\n\u003e 50.\n\u003e Subroutine JSON::PP::Boolean::(++ redefined at\n\u003e /home/ishigaki/.plenv/versions/5.20.0/lib/perl5/5.20.0/overload.pm line\n\u003e 50.\n\u003e \n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly or view it on GitHub\n\u003e https://github.com/rurban/Cpanel-JSON-XS/issues/65\n\n## \n\n-- Reini","files":null},{"type":3,"author":{"id":"bb2fb75963723f9055067e99b81a958aac2e10f0"},"timestamp":1463377183,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxOTM1Mjc1NA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-219352754"},"message":"Thanks for the reply. Confirmed the problem would be fixed by the lazy overloading as Cpanel::JSON::XS does. And naturally, the warnings can be suppressed by preloading JSON::PP explicitly, before some random module uses Cpanel::JSON::XS (directly or indirectly via JSON::MaybeXS), per #60.\n\nHowever, if we do need to ask makamaka to change JSON::PP, might it be better to ask him to move the guts of JSON::PP::Boolean into lib/JSON/PP/Boolean.pm and use JSON::PP::Boolean from inside of JSON::PP, and set $INC{\"JSON/PP/Boolean.pm\"} = 1 in Cpanel::JSON::XS, to avoid re-overloading?","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1464880991,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyMzMyNjE1OQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-223326159"},"message":"If he does it right, I will do that, yes. schmorp already decided to ditch that and uses his own class with a different name.","files":null},{"type":3,"author":{"id":"bb2fb75963723f9055067e99b81a958aac2e10f0"},"timestamp":1465106241,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyMzc5NDkzMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-223794933"},"message":"OK. Thanks. I'll talk with him.","files":null},{"type":3,"author":{"id":"4d37042de8bbf27262601d2a9c8bcd75da9ba2fe"},"timestamp":1527105479,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5MTQ3NjYxMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-391476613"},"message":"Any updated on this?","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1527153142,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5MTY0NTUyMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-391645523"},"message":"Yes, see the Types::Bool discussion. I'll wait to see what they decide upon, and will decide later.\nCurrently they want to hicheck the `bool` namespace which is of course a big nono. So it will need more time.","files":null},{"type":3,"author":{"id":"004aa7a82bd77719720f5f1a1d1bf018a4059d50"},"timestamp":1533227961,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQwOTk5MDc2OQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-409990769"},"message":"Any update on this?\n\n(If the discussion mentioned above refers to https://github.com/aferreira/cpan-Types-Bool/pull/2 I can't see any resolution there.)","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1533228063,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQwOTk5MTI1MQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-409991251"},"message":"No updates yet. See https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-391645523\nhijacking bool is a blocker, so I will not do that.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1535027627,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNTM5ODEyOA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-415398128"},"message":"No updates in the broken modules. Not an error here. Closing. If something changes for the better I might be persuaded to do something else, but  it looks nothing better will come out of it. The best is still to use this module and nothing else.","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1535027627,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTgwNTEzMTQ2MQ=="},"status":2},{"type":3,"author":{"id":"bb2fb75963723f9055067e99b81a958aac2e10f0"},"timestamp":1535030080,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNTQwOTQxNw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-415409417"},"message":"@rurban, the original issue is not resolved yet (not about the new common boolean type distraction, but about lib/JSON/PP/Boolean.pm and %INC). As we discussed about ( https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-219352754 and https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-223326159 ),\n\n\u003e \u003e However, if we do need to ask makamaka to change JSON::PP, might it be better to ask him to move the guts of JSON::PP::Boolean into lib/JSON/PP/Boolean.pm and use JSON::PP::Boolean from inside of JSON::PP, and set $INC{\"JSON/PP/Boolean.pm\"} = 1 in Cpanel::JSON::XS, to avoid re-overloading?\n\n\u003e If he does it right, I will do that, yes. schmorp already decided to ditch that and uses his own class with a different name.\n\nnow JSON::PP::Boolean lives in lib/JSON/PP/Boolean.pm (since JSON::PP version 2.92, released on 2017-05-15), and you can tweak %INC. What do you say? Should I send a PR for it, or do we need more discussion about what \"does it right\" means?","files":null},{"type":6,"author":{"id":"bb2fb75963723f9055067e99b81a958aac2e10f0"},"timestamp":1535030080,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyMjQxOTY0Mw=="},"target":"3b4e87192d2c65c94e1b9ceee4bb766bd579b4e046d7f2eed65ef75df70a23dc","message":"@rurban, the original issue is not resolved yet (not about the new common boolean type distraction, but about lib/JSON/PP/Boolean.pm and %INC). As we discussed in https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-219352754 and https://github.com/rurban/Cpanel-JSON-XS/issues/65#issuecomment-223326159 ,\n\n\u003e \u003e However, if we do need to ask makamaka to change JSON::PP, might it be better to ask him to move the guts of JSON::PP::Boolean into lib/JSON/PP/Boolean.pm and use JSON::PP::Boolean from inside of JSON::PP, and set $INC{\"JSON/PP/Boolean.pm\"} = 1 in Cpanel::JSON::XS, to avoid re-overloading?\n\n\u003e If he does it right, I will do that, yes. schmorp already decided to ditch that and uses his own class with a different name.\n\nnow JSON::PP::Boolean lives in lib/JSON/PP/Boolean.pm (since JSON::PP version 2.92, released on 2017-05-15), and you can tweak %INC. What do you say? Should I send a PR for it, or do we need more discussion about what \"does it right\" means?","files":null}]}