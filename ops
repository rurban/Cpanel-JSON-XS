{"version":1,"ops":[{"type":5,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1448786170,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ3NzAxMjU4MQ=="},"added":["questionable"],"removed":[]},{"type":3,"author":{"id":"44c73ae13059122902f5b8921212db55b85e87b4"},"timestamp":1513884931,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MzQzODY2NA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/38#issuecomment-353438664"},"message":"Is this basically asking that every string returned by decode be utf8::upgrade-d?  \n\nI have a similar problem, but I want all strings downgraded (with FAIL_OK true).  See https://stackoverflow.com/questions/47893579/decode-json-without-utf8-flagged-strings\n\nMaybe a new options upgrade, downgrade, and downgrade_fail_ok?  Or a single option with a parameter that supports any of those?  Or failing that, a filter_json_string like filter_json_object but called for every string (though I'd prefer a method name containing \"hook\", not \"filter\").","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1513885441,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MzQ0MDUyMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/38#issuecomment-353440523"},"message":"It is a bug for a module to depend on strings being downgraded. I don't think it's worth complicating the interface of this module to work around that.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1513885701,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MzQ0MTYxMQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/38#issuecomment-353441611"},"message":"No, it's only for the 128-255 range, where the outcome is ambiguous. But I agree, it looks a bit too complicated. Let's see if someone will come up with a PR","files":null},{"type":3,"author":{"id":"44c73ae13059122902f5b8921212db55b85e87b4"},"timestamp":1513962613,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MzYzOTA5OQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/38#issuecomment-353639099"},"message":"Yes, it is certainly a bug for a module to depend on strings being downgraded.  But sometimes you have to work around bugs.  :)\n\nAn alternative to changing the interface (for my problem, not the problem called out in this bug) would be to make the binary option not croak on \\u00xx as it does currently.","files":null},{"type":3,"author":{"id":"5e0a68f2609f1b2ed53fa7449ddf2c976324fce4"},"timestamp":1517388729,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM2MTg2NDU3NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/38#issuecomment-361864575"},"message":"\u003e Yes, it is certainly a bug for a module to depend on strings being downgraded.\n\nI fully agree.\n\nAnd if there is another buggy module, then that should be fixed or workarounded. Not JSON module just because something else is buggy. And also if another module is buggy and cannot be fixed then still user of that module can call utf8::upgrade/downgrade manually.\n\nSo I do not think that Cpanel::JSON::XS needs such new and buggy functionality.","files":null}]}