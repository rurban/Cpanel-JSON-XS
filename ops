{"version":1,"ops":[{"type":5,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1520264226,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE1MDQzODc4MDI="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1520271182,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDQ5ODYwOQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-370498609"},"message":"Fixed this bug, but there's still a stringification error.\n\nNote that JSON::XS cannot stringify neither, which I did fix then:\n```\nperl -MJSON::XS -e'package ZZ;\nuse overload (q(\"\") =\u003e sub { \"\u003cZZ:\".${$_[0]}.\"\u003e\" } );\npackage main;\n$o3 = bless \\(my $dummy = 1), \"ZZ\";\nprint $o3, JSON::XS-\u003enew-\u003econvert_blessed-\u003eencode($o3);'\n```\n=\u003e `\u003cZZ:1\u003e error`","files":null},{"type":3,"author":{"id":"18b679769de381b852b3ed5d3832bd5ebc63157a"},"timestamp":1520273485,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDUxMDU2NA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-370510564"},"message":"Stringification overload doesn't appear to be supported by JSON::XS looking at the docs, actually","files":null},{"type":3,"author":{"id":"18b679769de381b852b3ed5d3832bd5ebc63157a"},"timestamp":1520273509,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDUxMDY5NA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-370510694"},"message":"Also `convert_blessed($o3)` isn't what you mean is it? Shouldn't that be -\u003econvert_blessed-\u003eencode($o3)`","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1520274221,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDUxNDM5Ng==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-370514396"},"message":"Sure. Right, that's unsupported/broken. \nI.e. code for stringification is in JSON::XS, but broken because he mixed up refs.","files":null},{"type":3,"author":{"id":"0ff59efd343dda66c5a71aa8eba4f9b004aa186f"},"timestamp":1580923473,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4MjUxODcyOA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-582518728"},"message":"Going to chime that I appreciate the work done on this PR.  Is there anything I can do to help?\n\nWe're still in a position where some code is using JSON or JSON::XS, but newer code is converted to JSON::MaybeXS which favors Cpanel::JSON::XS.  This difference in blessed object serialization just creeped up in our test suite.  The tests passed with JSON::XS loaded, but they failed since Cpanel::JSON::XS returned `null` for an object when `-\u003eallowed_blessed()` wasn't set, but `-\u003econvert_blessed()` was enabled.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596703414,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2OTc5NjM3Ng==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-669796376"},"message":"So I digged through the code again and compared to JSON::XS. Some part of the documentation is also wrong:\n\nI added this senetence to the allow_blessed section:\n```\nIf C\u003c$enable\u003e is false (the default), then C\u003cencode\u003e will throw an\nexception when it encounters a blessed object without a C\u003cTO_JSON\u003e method.\n```\n\ni.e. even JSON::XS does not check for allow_blessed on an objectref with a TO_JSON method.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596703414,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzkxMTc4NzQ2"},"target":"473ecb8044b3a7bd01c54723db72136327749e9a86609c38ebecf047b861ec3b","message":"So I digged through the code again and compared to JSON::XS. Some part of the documentation is also wrong, allow_blessed is ignore with convvert_blessed and TO_JSON.\n\nI added this senetence to the allow_blessed section:\n```\nIf C\u003c$enable\u003e is false (the default), then C\u003cencode\u003e will throw an\nexception when it encounters a blessed object without convert_blessed and a C\u003cTO_JSON\u003e method.\n```\n\ni.e. even JSON::XS does not check for allow_blessed on an objectref with a TO_JSON method.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596704951,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzkxMTg1NTY4"},"target":"473ecb8044b3a7bd01c54723db72136327749e9a86609c38ebecf047b861ec3b","message":"So I digged through the code again and compared to JSON::XS. Some part of the documentation is also wrong, allow_blessed is ignore with convvert_blessed and TO_JSON.\n\nI added this sentence to the allow_blessed section:\n```\nIf C\u003c$enable\u003e is false (the default), then C\u003cencode\u003e will throw an\nexception when it encounters a blessed object without convert_blessed and a C\u003cTO_JSON\u003e method.\n```\n\ni.e. even JSON::XS does not check for allow_blessed on an objectref with a TO_JSON method. \nWhat is now missing is proper stringification still in some cases. Which is not a regression, and JSON::XS does not support it anyway.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596707759,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzkxMTk2NTA2"},"target":"473ecb8044b3a7bd01c54723db72136327749e9a86609c38ebecf047b861ec3b","message":"So I digged through the code again and compared to JSON::XS. Some part of the documentation is also wrong, allow_blessed is ignored with convvert_blessed and TO_JSON.\n\nI added this sentence to the allow_blessed section:\n```\nIf C\u003c$enable\u003e is false (the default), then C\u003cencode\u003e will throw an\nexception when it encounters a blessed object without convert_blessed and a C\u003cTO_JSON\u003e method.\n```\n\ni.e. even JSON::XS does not check for allow_blessed on an objectref with a TO_JSON method. \nWhat is now missing is proper stringification still in some cases. Which is not a regression, and JSON::XS does not support it anyway.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596820334,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3MDYxOTM2Nw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/105#issuecomment-670619367"},"message":"Fixed with 1ea8fdffe52c5319a24e26e4f068f92350243aa2\nand closed with fced48086be476551b489a16fb268fef0b493772 (Release 4.20)","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1596820334,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzYzNDA2Mjk0NQ=="},"status":2}]}