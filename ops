{"version":1,"ops":[{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1488819163,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ1NzkyMA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284457920"},"message":"System Z really can only be used since 5.26 with it's advanced long double support, I assume.\nIt really needs to set USE_QUADMATH, but I have no idea how they implement quadmath. \nIn `-libm` I assume, because System Z is one of the rare platforms with proper IEEE long double, not the castrated 10-byte Intel variant.\n\nDoes setting `#define USE_QUADMATH` at the top of XS.xs around `#if defined(__BORLANDC__)` fix it?\nI have to think how this machine even passed the long double core tests. Because JSON::XS simply calls core Gconvert, nothing else.","files":null},{"type":3,"author":{"id":"65b6755d6747727bc7089f4061cb8ad439fd4d36"},"timestamp":1488819526,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ1OTg4NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284459885"},"message":"No, that just gives: `undefined symbol: quadmath_snprintf at /home/david.golden/opt/perl/24.0ld/lib/5.24.0/s390x-linux-ld/DynaLoader.pm line 193`","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1488819604,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ2MDI5Nw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284460297"},"message":"Thanks. This is now a core `Gconvert` problem. `d_Gconvert='qgcvt((x),(n),(b))';`\nwhich is correct for this s390x 64bit architecture, with `libm` directly supporting IEEE long double.\nDoes 5.26 work, or does the core test suite even pass the long double tests?\nJarkko recently improved that.\n\nlongdblsize=16/longdblkind=2 so a true IEEE long double. (i.e. a IEEE 754 128-bit big endian long double ).\nShould be the same as a normal Solaris sparc64 machine, so I can try to find such a machine. \nqemu had it I believe for debian.","files":null},{"type":3,"author":{"id":"65b6755d6747727bc7089f4061cb8ad439fd4d36"},"timestamp":1488820073,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ2Mjc3MA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284462770"},"message":"with `-Dusequadmath` or something else?\n\n(Are you on irc.perl.org or freenode for chat?)\n\nWell, it turns out core tests pass.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1488820276,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ2MzgzMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284463833"},"message":"yes, on irc.perl.org as rurban.\n-Dusequadmath will not work, because they support quadmath out of the box in their `libm`","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1488822541,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI4NDQ3NTAyMQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/83#issuecomment-284475021"},"message":"I'll rewrite the Gconvert part to use the proper sv_2pv_flags() API, not just Gconvert.","files":null},{"type":5,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1553591140,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIyMjg5NzE0NTQ="},"added":["waiting_for_feedback"],"removed":[]}]}