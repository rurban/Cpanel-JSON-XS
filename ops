{"version":1,"ops":[{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562318968,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0NTM5ODM4NA=="},"target":"6c02f4da2b69a9836ade64169dab2bc82aa2e02ff5ef78438672fd137cd2aa9d","message":"Despite the name the company cPanel never used this module, because of their famous middle management. Now also plaguing p5p. They also don't maintain it.\nWe shouldn't continue with this lie.\n\nThe best name JSON::XS is already taken, so maybe **JSON::Safe**, analog to the new YAML::Safe is better and shorter.\nJSON is already safe, yes. But this is the best idea I came up with.\n\nIt also has the same API as YAML::Safe, and totally different to YAML::XS which sets its options via globals. We get and set our options via methods.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562318987,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0NTM5ODUyMA=="},"target":"6c02f4da2b69a9836ade64169dab2bc82aa2e02ff5ef78438672fd137cd2aa9d","message":"Despite the name the company cPanel never used this module, because of their famous middle management. Now also plaguing p5p. They also don't maintain it.\nWe shouldn't continue with this lie.\n\nThe best name JSON::XS is already taken, so maybe **JSON::Safe**, analog to the new YAML::Safe is better and shorter.\nJSON is already safe, yes. But this is the best idea I came up with.\n\nIt also has the same API as YAML::Safe, and totally different to YAML::XS which sets its options via globals. We get and set our options via methods, and keep state in an object.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562319029,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0NTM5ODgzMQ=="},"target":"6c02f4da2b69a9836ade64169dab2bc82aa2e02ff5ef78438672fd137cd2aa9d","message":"Despite the name the company cPanel never used this module, because of their famous middle management. Now also plaguing p5p. They also don't maintain it.\nWe shouldn't continue with this lie.\n\nThe best name JSON::XS is already taken, so maybe **JSON::Safe**, analog to the new YAML::Safe is better and shorter.\nJSON is already safe, yes. But this is the best idea I came up with.\n\nIt also has the same API as YAML::Safe, and totally different to YAML::XS which sets its options via globals. We get and set our options via methods, and keep state in an object. We could add a whitelist of allowed classed to be blessed to or from. (SafeClass, SafeLoad, ...)","files":null},{"type":5,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562318896,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI0NjIyMTUxNzY="},"added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1562340201,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODc5Mjg5NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-508792895"},"message":"I don't think it's the best name as far as representing the module's purpose, but I do agree that Cpanel::JSON::XS is worse and there aren't a lot of good choices.","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1562362987,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODg2NzcxMw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-508867713"},"message":"Sounds good to me. The cpanel name has always caused confusion.\n\nOf course, please continue to include Cpanel::JSON::XS as a wrapper module, so all the code that uses it continues to work :)","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1562363087,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODg2Nzk1Nw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-508867957"},"message":"adapted from a suggestion on irc -- how about JSON::RFC8259?","files":null},{"type":3,"author":{"id":"e0b1be7a3de3a3a0e6722aa10c77fce0aae1bda4"},"timestamp":1562363596,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODg2OTEwMA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-508869100"},"message":"Also not great, but indicates XS at least: JSON::ReXS\nRe as in retry, another take on JSON in XS","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562407761,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODkxNDEyOQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-508914129"},"message":"JSON::RFC8259 is insecure by default, and literally a joke. All the missing problems were left undefined. If so then the very first RFC4627. \nJSON::ReXS sounds good, but JSON::Safe is still sounds better. It's the only safe-by-default JSON module, and it mimics the YAML::Safe API.","files":null},{"type":6,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1562407761,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0NTcyNDU2Nw=="},"target":"1c9a18973bf0c69df7d6ceebc159eece1ab33bc5f5d4a517c49303c8313235d1","message":"JSON::RFC8259 is insecure by default, and literally a joke. All the missing problems were left undefined. If so then the very first RFC4627. \nJSON::ReXS sounds good, but JSON::Safe still sounds better. It's the only safe-by-default JSON module, and it mimics the YAML::Safe API.","files":null},{"type":3,"author":{"id":"e849f78806604f631cc0f1502746949cbd92e042"},"timestamp":1562540404,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwOTAzNzQwNA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-509037404"},"message":"EUMM used to depend on Parse::CPAN::Meta which used to depend in (unmainted?) JSON.PM but I think the PCM dep was eventually replaced by JSON::MaybeXS which is C::J::XS compatible so currently I do have the ENV var set and 99% of my Perl builds run with C::J::X since JSON::XS dropped C89 years ago, C::J::X did not. I dont have time to research all of these backend wrappers and loaders, but there is QUITE a bit of regexs and absolute name of C::J::X coded on CPAN, breathing on them by changing CJX's name in 2019 requires alot of testing or new releases of other CPAN modules that they dont fall back to JSON::PP. A poisoned JSON::PP.pm file and a poisoned JSON::XS that both die() at \"use\" time is only way to test a CJX rename works. I'll have to fix my env vars too obviously but that is dark code and ill deal with it when it comes.\n\nhttps://github.com/Perl-Toolchain-Gang/CPAN-Meta/pull/107\nhttps://github.com/p5sagit/JSON-MaybeXS/pull/1\nhttps://github.com/makamaka/JSON/issues/32","files":null},{"type":3,"author":{"id":"e849f78806604f631cc0f1502746949cbd92e042"},"timestamp":1562540906,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwOTAzNzkwMQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-509037901"},"message":"https://github.com/makamaka/JSON/blob/master/lib/JSON.pm#L72 example of sketchy code","files":null},{"type":3,"author":{"id":"e9c35b7e40364a983ef679bde9c842e8abc5a529"},"timestamp":1563115747,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUxMTIwODg0Ng==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-511208846"},"message":"JSON::Safe is fine. +1 for the change.JSON::JFD.","files":null},{"type":6,"author":{"id":"e9c35b7e40364a983ef679bde9c842e8abc5a529"},"timestamp":1563115747,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0OTA5OTk0NA=="},"target":"2f8bebf85619ddce53a188d2045e2499d67fe13982de3568f695169c80b4fcbb","message":"JSON::Safe is fine. +1 for the change.\nCan your new dist still export the old module name so as not to break all the wrappers bulk88 lists above? At least until they change.","files":null},{"type":3,"author":{"id":"88c859e22dde88fc38bcab9237dc1a9c4d29f84b"},"timestamp":1574614759,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NzkwNzIzNg==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-557907236"},"message":"IMHO JSON::Safe is the best proposal so far.\n\nMaybe JSON::Std would be worth to discuss.","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1574614869,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NzkwNzQwOA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-557907408"},"message":"It might be worth considering a name that still indicates XS, as this is an important factor in choosing the module.","files":null},{"type":3,"author":{"id":"5e0a68f2609f1b2ed53fa7449ddf2c976324fce4"},"timestamp":1576489384,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NTk4Mjk1MQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-565982951"},"message":"I would suggest to enable `-\u003eunblessed_bool`, `-\u003etype_all_string` and `-\u003erequire_types` options by default in new module to have JSON encoding deterministic across different Perl versions, see: http://e-choroba.eu/18-yapc","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1576489758,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NTk4NTI3OA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-565985278"},"message":"I like the talk. thinking that Safe also implies type-safety, it would make sense. But `require_types` would be too much. It would break most existing code. I'll test it. still have to finish setting up my new computers, with a few hundred perl's and its modules. so it will need at least another month or so.","files":null},{"type":3,"author":{"id":"5e0a68f2609f1b2ed53fa7449ddf2c976324fce4"},"timestamp":1576489908,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NTk4NjIxNw==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-565986217"},"message":"`-\u003etype_all_string` already implies types, so `-\u003erequire_types` is OK and existing code would not be broken. It is also written in documentation:\nhttps://metacpan.org/pod/Cpanel::JSON::XS#$json-=-$json-%3Erequire_types-([$enable])","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1576489969,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NTk4NjYzNQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-565986635"},"message":"Ah good. Then it's ok I think.","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1576507528,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NjA5MTM1NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-566091355"},"message":"I don't think any of these should be enabled since it will just be another behavior change everyone needs to keep track of. unblessed_bool and type_all_string both break roundtripping.","files":null},{"type":3,"author":{"id":"5e0a68f2609f1b2ed53fa7449ddf2c976324fce4"},"timestamp":1579807470,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NzgzNTIwMQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-577835201"},"message":"Currently all other JSON encoders randomly changes their behavior when updating Perl itself. This is really problematic and for more people very surprised. I already heard advice: Do not upgrade Perl because it will change encoding of your JSONs. I'm looking at this problem from different side: Ensure that encoding and decoding would be same independenly of used version. And options above can achieve it.","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1579813470,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3Nzg3NjE3NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-577876175"},"message":"\u003e Currently all other JSON encoders randomly changes their behavior when updating Perl itself. This is really problematic and for more people very surprised.\n\nIs this referring to JSON::PP changing the default of allow_ref to true in 4.0, or something else?","files":null},{"type":3,"author":{"id":"f34c04e0e0e3bebc3e5d88adbfea49725ff261ca"},"timestamp":1579854014,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3ODAzNTA4NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-578035085"},"message":"What about JSON::SafeXS ?","files":null},{"type":3,"author":{"id":"5e0a68f2609f1b2ed53fa7449ddf2c976324fce4"},"timestamp":1579857222,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3ODA1MDMwMQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-578050301"},"message":"@karenetheridge I'm referring to the fact which @choroba described that JSON types are being changed when updating Perl.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1579891093,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3ODI0OTUxNg==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-578249516"},"message":"@mj41-gdc nice, but I already published the equivalent YAML::Safe","files":null},{"type":3,"author":{"id":"35097712878097a5d6500e7b4048c9e002777c3c"},"timestamp":1581024098,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4MzExNjQ4OQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/142#issuecomment-583116489"},"message":"JSON::Excess","files":null}]}