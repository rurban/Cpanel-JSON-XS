{"version":1,"ops":[{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1529426520,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5ODQ2NTgwNQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/111#issuecomment-398465805"},"message":"So cpanel_json_xs should look at the version number of bencode and fix it\nup? Can you provide a patch for that?\n\ntrantor \u003cnotifications@github.com\u003e schrieb am Di., 19. Juni 2018, 18:07:\n\n\u003e Hello.\n\u003e It's more of a problem with the Convert::Bencode backend module, but I am\n\u003e hoping something might be done anyway to solve the problem with\n\u003e cpanel_json_xs.\n\u003e Basically as of now Convert::Bencode is interpreting the length of strings\n\u003e as a count of bytes instead of a count of characters.\n\u003e Therefore things break with multibyte characters.\n\u003e Examples below (with a utf-8 locale):\n\u003e\n\u003e $ echo -n 'd1:f4:ledie' | cpanel_json_xs -f bencode -t json-utf-8\n\u003e {\"f\":\"ledi\"}\n\u003e\n\u003e $ echo -n 'd1:f4:ledìe' | cpanel_json_xs -f bencode -t json-utf-8\n\u003e Use of uninitialized value $item in string ne at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 134, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 127, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 138, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 148, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in pattern match (m//) at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 157, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 127, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 138, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 148, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in pattern match (m//) at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 157, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string ne at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 134, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 127, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 138, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 148, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in pattern match (m//) at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 157, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 127, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 138, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 148, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in pattern match (m//) at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 157, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string ne at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 134, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 127, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 138, \u003cSTDIN\u003e line 1.\n\u003e Use of uninitialized value $item in string eq at /usr/local/share/perl/5.18.2/Convert/Bencode.pm line 148, \u003cSTDIN\u003e line 1.\n\u003e\n\u003e The implementation used by Net::BitTorrent::Protocol::BEP03::Bencode, for\n\u003e instance, works as expected.\n\u003e For example:\n\u003e\n\u003e echo -n 'd1:f4:ledìe' | perl  -MNet::BitTorrent::Protocol::BEP03::Bencode=bdecode -MCpanel::JSON::XS -wnE 'utf8::decode $_;print encode_json bdecode $_'\n\u003e {\"f\":\"ledì\"}\n\u003e\n\u003e Thanks.\n\u003e\n\u003e —\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/rurban/Cpanel-JSON-XS/issues/111\u003e, or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AACjUZZpYHTk4iNL8DH9TMfnLNa-lxuzks5t-SHHgaJpZM4Utzp0\u003e\n\u003e .\n\u003e","files":null},{"type":3,"author":{"id":"c004f80c5e688a13aff028e467e6e5cd8c3e2250"},"timestamp":1529441915,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5ODU0MjAzOA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/111#issuecomment-398542038"},"message":"Mmm... I might have misjudged what might be the _correct_ behaviour compared to what I expected it to be.\nApparently the Bittorrent specification (which I find a bit less than thorough or clear when it comes to describing the serialization format) describes the length of a string as the number of bytes it's encoded as rather than the number of characters it's composed of.\nBut I think several pieces of software (certainly the one I am dealing with, the Zimbra e-mail platform) actually use the second approach, namely choosing as length the number of characters the string is made of. And from what I see different implementations of the serialization format go along either with one or the other approach.\nI think the \"right\", so to speak, way to solve the problem would be for a way to specify which behaviour one might wish for as needed, but I don't see an implementation allowing for that at present.\nFrom what I can see Convert::Bencode, used in cpanel_json_xs, has not been updated in 15 years and no bug filed recently has been addressed, so a replacement module might not entirely be a bad idea.\nModules such as Bencode or  Net::BitTorrent::Protocol::BEP03::Bencode have at least shown signs of life and progress in recent years and behave as I'd wish, although I am unable to comment on the quality of the code or on whether they might disrupt the current behaviour.\nI think I might need to look into this a bit more deeply before suggesting anything.","files":null},{"type":6,"author":{"id":"c004f80c5e688a13aff028e467e6e5cd8c3e2250"},"timestamp":1529441915,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDk4OTM2NjQx"},"target":"641dbafc4fbc0fcdc746f3b8ff22802a5a60b81d3834c8f272e9fb9a840ae252","message":"Mmm... I might have misjudged what the _correct_ behaviour might be compared to what I expected it to be.\nApparently the Bittorrent specification (which I find a bit less than thorough or clear when it comes to describing the serialization format) describes the length of a string as the number of bytes it's encoded as rather than the number of characters it's composed of.\nBut I think several pieces of software (certainly the one I am dealing with, the Zimbra e-mail platform) actually use the second approach, namely choosing as length the number of characters the string is made of. And from what I see different implementations of the serialization format go along either with one or the other approach.\nI think the \"right\", so to speak, way to solve the problem would be for a way to specify which behaviour one might wish for as needed, but I don't see an implementation allowing for that at present.\nFrom what I can see Convert::Bencode, used in cpanel_json_xs, has not been updated in 15 years and no bug filed recently has been addressed, so a replacement module might not entirely be a bad idea.\nModules such as Bencode or  Net::BitTorrent::Protocol::BEP03::Bencode have at least shown signs of life and progress in recent years and behave as I'd wish, although I am unable to comment on the quality of the code or on whether they might disrupt the current behaviour.\nI think I might need to look into this a bit more deeply before suggesting anything.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1529441822,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5ODU0MzA2OA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/111#issuecomment-398543068"},"message":"I see, I'll have a look also. Thanks","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1529580286,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM5OTA3MDY0OQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/111#issuecomment-399070649"},"message":"Released a fix as 4.03","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1529580286,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTY5MzQwMTUzOA=="},"status":2}]}