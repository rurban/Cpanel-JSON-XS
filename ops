{"version":1,"ops":[{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1585256426,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNDY4MzI2Mg==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-604683262"},"message":"IMO it should be restricted to boolean objects such as decode_json would return. There are other ways to encode to booleans and if they all were true in is_bool it would be of limited use.","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1585258354,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNDY5ODEyOA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-604698128"},"message":"I would have use for a function that returned true whenever the value would be encoded as a boolean.  Otherwise, I have to do: `$j-\u003eencode($value) =~ /^(true|false)$/`.","files":null},{"type":3,"author":{"id":"d19730b1d47a47ba43733401ca1bc3d2bbb7f976"},"timestamp":1585258812,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNDcwMTI3NQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-604701275"},"message":"If you force the boolean type with JSON_TYPE_BOOL, then standard Perl boolean logic is used. So I think for that it would be more useful to have a function that returns a JSON boolean object or undef if it would not be interpreted as a boolean.","files":null},{"type":3,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1585312667,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNDk3Nzk5OA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-604977998"},"message":"\u003e I would have use for a function that returned true whenever the value would be encoded as a boolean. Otherwise, I have to do: `$j-\u003eencode($value) =~ /^(true|false)$/`.\n\nHmm, didn't think of that. But that needs to be the job of a generic Type::Bool method. We shouldn't solve everything, only detect our method results.","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1589682730,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMzI2NTE0MQ==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-623265141"},"message":"BTW the documentation for is_bool mentions JSON::XS::true and JSON::XS::false - is this also out of date and should read JSON::PP::Boolean?\n\n      $is_boolean = Cpanel::JSON::XS::is_bool $scalar\n           Returns true if the passed scalar represents either \"JSON::XS::true\" or \"JSON::XS::false\", two constants that act like 1 and 0, respectively and are used to represent JSON \"true\" and \"false\" values in Perl.","files":null},{"type":6,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1589682730,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzcyNjY5NTkw"},"target":"926774c9a9390042fb650a02c331b07bf91884de02703d20ee649ad8a8c4da5c","message":"BTW the documentation for is_bool mentions JSON::XS::true and JSON::XS::false - is this also out of date and should read JSON::PP::Boolean?\n\n      $is_boolean = Cpanel::JSON::XS::is_bool $scalar\n           Returns true if the passed scalar represents either \"JSON::XS::true\" or \"JSON::XS::false\", two constants that act like 1 and 0, respectively and are used to represent JSON \"true\" and \"false\" values in Perl.\n\n(edit: I sent a patch that fixed this in #164.)","files":null},{"type":3,"author":{"id":"cfbcaa4ccc85c548a53773770f9acbb38aa86d86"},"timestamp":1589682846,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyOTczMzU4NA==","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/162#issuecomment-629733584"},"message":"I decided to not be so clever in my application and just called `is_bool()`. Otherwise, encoding the value and doing a stringwise comparison to `\"true\"` or `\"false\"` is a reasonable workaround.","files":null},{"type":4,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1589733833,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzM0NDcyODk2Ng=="},"status":2}]}