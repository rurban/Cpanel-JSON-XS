{"version":1,"ops":[{"type":1,"author":{"id":"958a27fe1db015fb32ad07c2f8a525f05d237c4a"},"timestamp":1443115491,"metadata":{"github-id":"MDU6SXNzdWUxMDgxNzU3NDE=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/39","origin":"github"},"title":"Serialize PL_sv_yes and PL_sv_no as boolean true / false","message":"perl has special values that could be interpreted as booleans: PL_sv_yes and PL_sv_no. They can be created from pure perl using `!0` and `!1`. YAML::XS uses them for boolean round-tripping.\n\n```\n$ perl -MDevel::Peek -MO=Concise -e 'Dump([ !0, !1 ])'\n8  \u003c@\u003e leave[1 ref] vKP/REFC -\u003e(end)\n1     \u003c0\u003e enter -\u003e2\n2     \u003c;\u003e nextstate(main 1 -e:1) v:{ -\u003e3\n7     \u003c2\u003e Dump vK/1 -\u003e8\n6        \u003c@\u003e anonlist sK*/1 -\u003e7\n3           \u003c0\u003e pushmark s -\u003e4\n4           \u003c$\u003e const(SPECIAL sv_yes) s/FOLD -\u003e5\n5           \u003c$\u003e const(SPECIAL sv_no) s/FOLD -\u003e6\n-e syntax OK\n```\n\nCpanel::JSON::XS (like JSON::XS) doesn't recognize them:\n\n```\n$ $ perl -MCpanel::JSON::XS -E 'print Cpanel::JSON::XS::encode_json([ !0, !1 ])'\n[1,\"\"]\n```\n\nI expect this output:\n\n```\n[true,false]\n```\n\nThis issue is painful to convert YAML to JSON while keeping booleans values properly typed. See [this StackOverflow question](https://stackoverflow.com/questions/32763676/how-to-preserve-boolean-type-from-yaml-document-in-perl-5).","files":null}]}