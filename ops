{"version":1,"ops":[{"type":1,"author":{"id":"42b8049125821cad60d350df07d9d216b854f3f7"},"timestamp":1477521537,"metadata":{"github-id":"MDU6SXNzdWUxODU1MjkxODk=","github-url":"https://github.com/rurban/Cpanel-JSON-XS/issues/72","origin":"github"},"title":"Check jsonspec results from http://seriot.ch/json/parsing.html","message":"add all these testcases to `t/30_jsonspec.t` http://seriot.ch/json/parsing.html#23\ncurrently the exact same results as with JSON::XS. \nJSON::PP fails 4 more n_ tests, but passes some which fail with XS, only fails 5 y_.\n\nn_ tests need to fail when parsing.\ny_ need to parse and return valid results.\ni_ tests are undefined, do the sensible result there.\n\ntodo: detect and accept BOM, \nerror with i_string_unicode_U+10FFFE_nonchar, i_string_unicode_U+1FFFE_nonchar,  i_string_unicode_U+FDD0_nonchar, i_string_unicode_U+FFFE_nonchar, i_string_not_in_unicode_range\n\nfixme:\n\n```\ny_string_utf16      FFFE[00\"00E900\"00]00 \u003c=\u003e [\"\"] BOM detection and reencoding\ni_structure_UTF-8_BOM_empty_object          detect the UTF-8 BOM\n\nn_number_then_00        1\\0 \u003c=\u003e 1     stricter number parser\n\nn_string_UTF8_surrogate_U+D800   [\"EDA080\"] \u003c=\u003e [\"\"] stricter unicode surrogate checks\ni_string_unicode_U+10FFFE_nonchar\ni_string_unicode_U+FDD0_nonchar\ni_string_unicode_U+FFFE_nonchar\ni_string_not_in_unicode_range\n```\n\neventually fix 'y_string_nonCharacterInUTF-8_U+FFFF'++ if $] \u003c 5.013\n\nsee branch `30_jsonspec.t`, currently failing 10 of 672 tests","files":null}]}